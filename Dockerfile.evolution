FROM node:20-alpine AS builder

WORKDIR /app

# Instalar dependências do sistema
RUN apk add --no-cache git curl bash python3 make g++

# Clonar o repositório na versão 2.3.4
RUN git clone --branch 2.3.4 --depth 1 https://github.com/EvolutionAPI/evolution-api.git .

# Instalar dependências
RUN npm ci --legacy-peer-deps

# Gerar Prisma client para PostgreSQL
RUN npx prisma generate --schema=./prisma/postgresql-schema.prisma

# Build da aplicação (sem verificação de tipos para evitar erros)
RUN npm run build || npx tsup

# Clonar e buildar o manager
WORKDIR /manager
RUN git clone --branch main --depth 1 https://github.com/EvolutionAPI/evolution-manager.git . && \
    npm ci && \
    npm run build

# Imagem final
FROM node:20-alpine

WORKDIR /evolution

# Instalar dependências necessárias
RUN apk add --no-cache curl bash ffmpeg

# Copiar node_modules e código fonte
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/Docker ./Docker
COPY --from=builder /app/src ./src

# Copiar manager
COPY --from=builder /manager/dist ./manager/dist

# Criar diretórios necessários
RUN mkdir -p /evolution/instances /evolution/store

# Expor porta
EXPOSE 8080

# Comando de inicialização
CMD ["node", "dist/main.js"]
